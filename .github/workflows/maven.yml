# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release Pipeline

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    #- name: Replace token
    #  env:
    #    TOKEN: ${{ secrets.DISCORD_TOKEN }}
    #  run: sed -i "s/\[token\]/$TOKEN/" src/de/akkjon/pr/mbrm/Main.java
    - name: Build with Maven
      #run: mvn -B package --file Discord-Bot-MusicbotRemoveMessage/pom.xml
      run: mvn -B package
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: bot
        path: /home/runner/work/GummiBot/GummiBot/target/GummiBot-**-jar-with-dependencies.jar
    - name: Set version
      env:
        VERSION: -1 
      run: |
        REGEX=".*<version>\(\([0-9]\|\.\)*\)<\/version>"
        export VERSION=$(less pom.xml | grep "<version>" | head -1 |sed "s/$REGEX/\1/")
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Check version
      run: |
        if [[ "$VERSION" =~ "<version>" ]] ; then exit 2 ; fi
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.VERSION }}
        release_name: V${{ env.VERSION }}
        draft: false
        prerelease: false
    - name: uplod jar
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: target/GummiBot-${{ env.VERSION }}-jar-with-dependencies.jar
        asset_name: bot.jar
        asset_content_type: application/java-archive
    - name: close milestone
      uses: Akkjon/close-milestone@v1
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        milestone_name: v${{ env.VERSION }}
    - name: send discord message
      run: |
        DATA="{
          \"embeds\": [
            {
              \"title\": \"Neue Version\",
              \"description\": \"Version ${{ env.VERSION }} ist released\",
              \"color\": 65280
            }
          ]
        }"
        curl -X POST -d "$DATA" -H "Content-Type: application/json" https://discord.com/api/webhooks/${{ secrets.DISCORD_SERVER }}/${{ secrets.DISCORD_WEBHOOK_GITHUB }}